Metadata-Version: 2.3
Name: fast_zero
Version: 0.1.0
Summary: 
Author: RaissaAndradeS
Author-email: 221035077@aluno.unb.br
Requires-Python: ==3.12.*
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: alembic (>=1.14.0,<2.0.0)
Requires-Dist: fastapi[standard] (>=0.115.8,<0.116.0)
Requires-Dist: psycopg[binary] (>=3.2.4,<4.0.0)
Requires-Dist: pwdlib[argon2] (>=0.2.1,<0.3.0)
Requires-Dist: pydantic-settings (>=2.6.1,<3.0.0)
Requires-Dist: pyjwt (>=2.10.1,<3.0.0)
Requires-Dist: python-multipart (>=0.0.18,<0.0.19)
Requires-Dist: sqlalchemy (>=2.0.32,<3.0.0)
Description-Content-Type: text/markdown

# FastAPI do Zero - Projeto de Estudo

Este projeto é uma implementação de estudo baseada no curso **FastAPI do Zero** do Dunossauro. Aqui, explorei os conceitos fundamentais do FastAPI, como criação de rotas, autenticação, e integração com bancos de dados.

## Tecnologias Utilizadas
- FastAPI
- Python
- SQLite
- Pydantic
- Uvicorn

## Funcionalidades Implementadas
Criação de rotas GET, POST, PUT, DELETE.

Autenticação básica com JWT.

Integração com banco de dados SQLite.

Validação de dados com Pydantic.

## Aprendizados
Aprendi a criar APIs RESTful com FastAPI.

Entendi como validar dados de entrada usando Pydantic.

Explorei a integração de um banco de dados SQLite com FastAPI.

